name: Build and Deploy Flask App

on:
  push:
    branches: [ "add-workflow-dispatch" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-k8-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/flask-k8-app:latest

 # Set up Helm CLI
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.13.1  # or latest stable

    # Create kubeconfig file from GitHub Secret
    - name: Configure kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
        export KUBE_CONFIG=$(pwd)/kubeconfig.yaml


    # Optional: Confirm cluster connectivity
    - name: Validate cluster access
      run: |
        export KUBE_CONFIG=$(pwd)/kubeconfig.yaml
        kubectl cluster-info

    # Delete existing deployment
    - name: Delete existing Deployment
      run: |
        export KUBE_CONFIG=$(pwd)/kubeconfig.yaml
        kubectl delete deployment/flask-app --namespace default --kubeconfig $KUBE_CONFIG --ignore-not-found

    # Deploy with Helm
    - name: Helm Upgrade & Install
      run: |
        export KUBE_CONFIG=$(pwd)/kubeconfig.yaml
        helm upgrade --install flask-app ./helm/helm-chart \
          --namespace default \
          --values ./helm/helm-chart/values.yaml
    
    #verify deployment
    - name: Verify Deployment
      run: |
        export KUBE_CONFIG=$(pwd)/kubeconfig.yaml
        kubectl rollout status deployment/flask-app --namespace default --kubeconfig $KUBE_CONFIG 
